// <auto-generated />
using System;
using AshBoard.Data.AppData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace AshBoard.Data.Migrations
{
    [DbContext(typeof(AshBoardDbContext))]
    [Migration("20250530005015_AjustesLeituraSensor")]
    partial class AjustesLeituraSensor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AshBoard.Domain.Entities.Alerta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHoraColeta")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Evento")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Gravidade")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("IncendioProximo")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double>("Latitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("Longitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("NomeLocal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("SensorId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("SensorId");

                    b.ToTable("Alertas");
                });

            modelBuilder.Entity("AshBoard.Domain.Entities.ArraySensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeLocal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("ArraySensores");
                });

            modelBuilder.Entity("AshBoard.Domain.Entities.Sensor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int?>("ArraySensorId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("DataUltimaLeitura")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("DirecaoVento")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("Latitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("Longitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("NivelCO2")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("NomeLocal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double?>("Temperatura")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("Id");

                    b.HasIndex("ArraySensorId");

                    b.ToTable("Sensores");
                });

            modelBuilder.Entity("AshBoard.Domain.Entities.Alerta", b =>
                {
                    b.HasOne("AshBoard.Domain.Entities.Sensor", "Sensor")
                        .WithMany("Alertas")
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("AshBoard.Domain.Entities.Sensor", b =>
                {
                    b.HasOne("AshBoard.Domain.Entities.ArraySensor", "ArraySensor")
                        .WithMany("Sensores")
                        .HasForeignKey("ArraySensorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ArraySensor");
                });

            modelBuilder.Entity("AshBoard.Domain.Entities.ArraySensor", b =>
                {
                    b.Navigation("Sensores");
                });

            modelBuilder.Entity("AshBoard.Domain.Entities.Sensor", b =>
                {
                    b.Navigation("Alertas");
                });
#pragma warning restore 612, 618
        }
    }
}
